# Overview

Progressive-render ray tracer accepting .rts scene specification files.

# Compilation

timmcHW6 requires a GNU/Linux machine with Java on the classpath.

Run ./build.sh to install the Leiningen build tool into the project directory
(dependencies will be installed into the ~/.lein directory.) The project will
be compiled into a standalone JAR file.

# Execution

Invoke `./run.sh` to execute HW6. Pass scene data in via standard input OR via
-f arguments. (Specifying any -f arguments will cause stdin to be ignored.)

A number of optional command line arguments are accepted:

Input and display:
 -w int        Set the width of the canvas in pixels. (Must be positive.)
 -h int        Set the height of the canvas in pixels. (Must be positive.)
 -f file.rts   Add this file's scene data to the render, and ignore stdin. This
               argument is cumulative.

Scene settings overrides:
 -ld bool      Turn diffuse lighting on or off.
 -ls bool      Turn specular lighting on or off.
 -sh bool      Turn shadows on or off.
 -rf int       Set the % reflectivity of surfaces for mirror reflection. (May be
               set > 100 or < 0 for interesting effects!)
 -ml int       Set the maximum number of mirror reflections for a ray. (Must be
               non-negative.)

For example: ./run.sh -rf 95 < ./res/xmaskaos.rts

All options may be repeated, but unless otherwise noted as cumulative, the last
instance of an option will be the one that takes effect. Boolean options may be
specified as true, false, on, off, yes, no, 1, or 0. Integer options must be
decimal integers.

# Known bugs

None.

# Extra credit

* Mirror reflection

# Third-party credit

* Libraries used: Clojure and Java standard libraries, Incanter Core numerical
  and statistical library.

